{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"css",
				"cssDir"
			],
			[
				"s",
				"sccs"
			],
			[
				"sass",
				"sassDir"
			],
			[
				"li",
				"library"
			],
			[
				"f",
				"fvalue"
			],
			[
				"g",
				"getElementById"
			],
			[
				"i",
				"indiv"
			],
			[
				"b",
				"button	Tag"
			],
			[
				"fu",
				"function"
			],
			[
				"m",
				"myarray"
			],
			[
				"my",
				"myFunctionu"
			],
			[
				"onc",
				"onclick	Attr"
			]
		]
	},
	"buffers":
	[
		{
			"file": "library/scss/config.rb",
			"settings":
			{
				"buffer_size": 951,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{\n  \"name\": \"vr\",\n  \"version\": \"1.0.0\",\n  \"devDependencies\": {\n    \"grunt\": \"~0.4.1\",\n    \"grunt-contrib-compass\": \"~0.2.0\",\n    \"grunt-contrib-imagemin\": \"~0.1.4\",\n    \"grunt-contrib-jshint\": \"~0.4.3\",\n    \"grunt-contrib-uglify\": \"~0.2.0\",\n    \"grunt-contrib-watch\": \"~0.4.3\",\n    \"matchdep\": \"^0.3.0\"\n  }\n}\n",
			"file": "package.json",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 309,
				"line_ending": "Unix",
				"name": "{"
			}
		},
		{
			"contents": "'use strict';\nmodule.exports = function(grunt) {\n \n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n \n    grunt.initConfig({\n    	pkg: grunt.file.readJSON('package.json')\n \n        // watch for changes and trigger compass, jshint, uglify and livereload\n        watch: {\n            options: {\n                livereload: true,\n            },\n            compass: {\n                files: ['library/**/*.{scss,sass}'],\n                tasks: ['compass']\n            },\n            js: {\n                files: '<%= jshint.all %>',\n                tasks: ['jshint', 'uglify']\n            },\n            livereload: {\n                files: ['*.html', '*.php', 'library/images/**/*.{png,jpg,jpeg,gif,webp,svg}']\n            }\n        },\n \n        // compass and scss\n        compass: {\n        	dev:{\n        		options:{\n        			require: 'susy',\n        			sassDir: 'library/sccs'\n        			cssDir:'library/css'\n\n        		}\n\n        	},\n            dist: {\n                options: {\n                	require: 'susy',\n                	sassDir: 'library/sccs'\n                	cssDir: 'library/css'\n                	outputStyle: 'compresed'\n\n                }\n            }\n        },\n \n        // javascript linting with jshint\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                \"force\": true\n            },\n            all: [\n                'Gruntfile.js',\n                'library/js/*.js'\n            ]\n        },\n \n        // uglify to concat, minify, and make source maps\n        uglify: {\n  options: {\n    // the banner is inserted at the top of the output\n    banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd-mm-yyyy\") %> */\\n'\n  },\n  dist: {\n    files: {\n      'library/js/scripts.min.js': ['library/js/scripts.js']\n    }\n  }\n},\n \n        // image optimization\n        imagemin: {\n            dist: {\n                options: {\n                    optimizationLevel: 7,\n                    progressive: true\n                },\n                files: [{\n                    expand: true,\n                    cwd: 'library/images/',\n                    src: '**/*',\n                    dest: 'library/imagemin/images/'\n                }]\n            }\n        }\n \n        // deploy via rsync\n        /*\n        deploy: {\n            staging: {\n                src: \"./\",\n                dest: \"~/path/to/theme\",\n                host: \"user@host.com\",\n                recursive: true,\n                syncDest: true,\n                exclude: ['.git*', 'node_modules', '.sass-cache', 'Gruntfile.js', 'package.json', '.DS_Store', 'README.md', 'config.rb', '.jshintrc']\n            },\n            production: {\n                src: \"./\",\n                dest: \"~/path/to/theme\",\n                host: \"user@host.com\",\n                recursive: true,\n                syncDest: true,\n                exclude: '<%= rsync.staging.exclude %>'\n            }\n        }\n        */\n \n    });\n\n \n    // rename tasks\n   // grunt.renameTask('rsync', 'deploy');\n \n    // register task\n    grunt.registerTask('default', ['watch']);\n \n};",
			"file": "rep/Gruntfile.js",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 3135,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"sass",
				"Set Syntax: Sass"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"fi",
				"FileDiffs: Menu"
			],
			[
				"filed",
				"FileDiffs: Menu"
			],
			[
				"filedi",
				"FileDiffs: Menu"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"HTML: Wrap Selection With Tag"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 149.0,
		"history":
		[
			"install",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/functions.php",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/rep/Gruntfile.js",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/page-custom.php",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/library/js/scripts.js",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/library/bones.php",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/page.php",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/CHANGELOG.md",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/style.css",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2/library/css/style.css",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/master/style.css",
		"/Users/Majid/Desktop/bonee/bones/404.php",
		"/Users/Majid/Desktop/style.css",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/packagejson",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/library/css/build/style.css",
		"/Users/Majid/Library/Application Support/Sublime Text 3/Packages/User/pacakge json",
		"/Users/Majid/Desktop/java/javatest.js",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/404.php",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/Gruntfile.js",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/package.json",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/package.jason",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/Bones/library/scss/breakpoints/_base.scss",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/eddiemachado-bones-bf651d3/library/scss/breakpoints/_base.scss",
		"/Applications/MAMP/htdocs/wordpress/wp-content/themes/master/library/scss/_base.scss",
		"/Users/Majid/Desktop/untitled folder/httpdocs/wp-content/themes/Mybones/bones-master/404.php",
		"/Users/Majid/Desktop/vr/wp-content/themes/Mybones/bones-master/404.php",
		"/Users/Majid/Desktop/untitled folder/httpdocs/wp-content/themes/Mybones/bones-master/library/scss/.sass-cache/8b27a5b04b9d05e9c3e72e0f8b48a5039322b8ef/_ellipsis.scssc",
		"/Users/Majid/Desktop/untitled folder/httpdocs/wp-content/themes/Mybones/bones-master/footer.php",
		"/Users/Majid/Desktop/untitled folder/httpdocs/wp-content/themes/Mybones/bones-master/library/scss/.sass-cache/af65db83e7246bccd95f3f3cda4791471a5694ff/_filter.scssc",
		"/Users/Majid/Library/Application Support/Sublime Text 3/Packages/FileDiffs/FileDiffs.sublime-settings",
		"/Users/Majid/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Majid/Library/Application Support/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/Users/Majid/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Majid/Desktop/java/mypage copy.html",
		"/Users/Majid/Desktop/java/mypage.html",
		"/Users/Majid/Desktop/vr/wp-config.php",
		"/Users/Majid/Documents/mypage.html",
		"/Users/Majid/Desktop/test.html",
		"/Applications/Sublime Text"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
			"/Applications/MAMP/htdocs/wordpress/wp-content/themes/vr2",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"icon",
			"WPCF7",
			"form-7",
			"scripts",
			"scripts.js",
			"jqueryui",
			"jquer",
			"no-widgets",
			"sidebar.php",
			"appear",
			"Default Template",
			"CUSTOM POS",
			"CUSTOM",
			"transition",
			"susy",
			"localhost/",
			"face",
			"Big"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "library/scss/config.rb",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 951,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 309,
						"regions":
						{
						},
						"selection":
						[
							[
								130,
								152
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "rep/Gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3135,
						"regions":
						{
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "VR2.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 307.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
